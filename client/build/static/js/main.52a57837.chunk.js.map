{"version":3,"sources":["components/Input/index.js","components/Button/index.js","components/Nav/index.js","components/Container/index.js","utils/API.js","pages/Home.js","components/NavLinks/index.js","components/PrintText/index.js","components/ContactCard/index.js","components/GuestForm/index.js","components/Modal/index.js","pages/Dashboard.js","pages/ErrorPage.js","pages/Guest.js","components/ColorMenu/ColorPicker/index.js","components/ColorMenu/ColorPicker2/index.js","components/ColorMenu/ColorPickerFont/index.js","components/ColorMenu/index.js","App.js","index.js"],"names":["Input","props","react_default","a","createElement","className","Object","assign","style","border","background","secondaryColor","color","fontColor","Placeholder","Button","float","shouldFloatLeft","floatLeft","console","log","marginBottom","children","Nav","id","Container","concat","fluid","API","createContact","userID","userData","axios","post","createUserContact","contactData","cb","then","result","catch","createGuestContact","getContacts","get","err","getContact","contactID","editContact","put","deleteContacts","delete","createUser","user","getUser","sendText","sendTo","message","txtBody","login","email","password","logout","Home","state","firstName","lastName","password2","toggleLoginSignup","handleInputChange","event","_event$target","target","name","value","_this","setState","defineProperty","handleSignUpForm","handleNewUserSubmit","preventDefault","userInfo","length","alert","results","res","handleFormLogin","APILogin","_this2","this","status","flipToDash","components_Container","onClick","onChange","placeholder","type","disabled","Component","NavLinks","Link","to","PrintText","ContactCard","PanelGroup","accordion","Panel","eventKey","Heading","Title","toggle","Body","collapsible","phone","street","city","zipcode","GuestForm","handleFormSubmit","GuestLink","context","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleShow","bind","assertThisInitialized","handleClose","show","eventID","es_Button","bsStyle","bsSize","margin-left","width","Modal","onHide","Header","closeButton","Footer","React","Dashboard","contacts","task","list","guestCheckboxes","handleGuestEdit","guestFormValues","componentDidMount","handleContactEdit","newItemId","lastItemId","handleToDoAdd","taskObj","newListObj","handleDelete","removeItems","renderToDos","bigArray","_loop","taskNum","push","handleFormEdit","handleSendMassMessage","handleCheckboxChange","changeEvent","prevState","objectSpread","selectAllCheckboxes","isSelected","keys","checkboxes","forEach","checkbox","selectAll","deselectAll","clearFormThanks","data","reduce","checkboxObj","contact","_this3","components_Modal","border-top","components_GuestForm","map","components_ContactCard","ErrorPage","href","Guests","match","params","ColorPicker","primaryColor","handleChangeComplete","hex","changePrimaryColor","document","body","backgroundColor","lib","onChangeComplete","colors","ColorPicker2","changeSecondaryColor","ColorPickerFont","changeFontColor","toggleColors","$","toggleClass","clickColor1","clickColor2","clickFont","button1Stlye","button2Stlye","button3Stlye","ColorMenu_ColorPicker","ColorMenu_ColorPicker2","ColorMenu_ColorPickerFont","App","newColor","newColor2","newFont","renderDefaultView","loggedIn","pages_Dashboard","pages_Home","toggleLoggedIn","logOut","Redirect","pathname","isLoggedIn","window","BrowserRouter","ColorMenu_Button","components_Nav","Switch","Route","exact","path","render","component","Guest","ReactDOM","src_App","getElementById"],"mappings":"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","file":"static/js/main.52a57837.chunk.js","sourcesContent":["import React from \"react\";\n\n\nexport function Input(props) {\n  return (\n    <div className=\"form-group\">\n      <input style=\n      {{\n        border: 0,  \n        background: props.secondaryColor, \n        color: props.fontColor,  \n        Placeholder: \"red\" \n        }}\n        className=\"form-control\" {...props} />\n    </div>\n  );\n}\n\n","import React from \"react\";\n\n\n\nexport function Button(props) {\n\n  function shouldFloatLeft() {\n    if (!props.floatLeft) {\n      console.log(props.floatLeft)\n      return props.floatLeft;\n    }\n    else {\n      console.log(\"hi\")\n      return \"right\"\n    }\n  }\n\n    return (\n      <button {...props} style={{ float: {shouldFloatLeft}, \n                                  background: props.secondaryColor, \n                                  color: props.fontColor, \n                                  marginBottom: 10,\n                                  border: 0}\n                                } \n                                  className=\"btn btn-success\">\n        {props.children}\n      </button>\n    );\n  };\n","import React from \"react\";\n\nfunction Nav(props) {\n  return (\n    <div className=\"container-title\">\n      {/* This is where the title is styled. */}\n       \n      <div id=\"title\" style={{background: props.secondaryColor,\n                              color: props.fontColor}}>\n        <div className=\"styleBox\">\n          <h1 id=\"nav-title\">i.Do</h1>\n          <h2 >the ultimate event planning app</h2>\n        </div>\n      </div>\n\n      \n    </div>\n    \n  );\n}\n\nexport default Nav;\n\n","import React from \"react\";\n\nfunction Container(props) {\n  return <div className={`container${props.fluid ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n}\n\nexport default Container;\n","import axios from \"axios\";\n\nexport default {\n  //==========================================================\n  //CONTACTS CRUD\n  //==========================================================\n\n  // Saves a Contact to the database\n    //requires userID passed. req.user.id cant be assumed to be present.\n  createContact: (userID, userData) => {\n    axios.post(\"/api/v1/contacts/\"+{userID}, userData)\n  },\n\n  createUserContact: (contactData, cb) => {\n    axios.post('/api/v1/contacts', contactData)\n    .then(result => {\n      cb(result)\n    })\n    .catch()\n  },\n\n  createGuestContact: (userID, contactData, cb) => {\n    axios.post('/api/v1/contacts/'+userID, contactData)\n    .then( result => {\n      cb(result)\n    })\n    .catch()\n  },\n\n  // Gets all contacts associated with user\n  getContacts: ( cb ) => {\n    axios.get(`/api/v1/contacts/`)\n      .then( result => {\n        // console.log(result);\n        cb(result);\n      })\n      .catch( err => console.log(err));\n  },\n\n  // Gets the contact with the given id\n  getContact: (contactID) => {\n    axios.get(`/api/v1/contacts/${contactID}`, {});\n  },\n\n  editContact: (contactID, userData) => {\n    axios.put(`/api/v1/contacts/${contactID}`, userData);\n  },\n\n   // Deletes the contact with the given id\n   deleteContacts: (contactID) => {\n    axios.delete(`/api/v1/contacts/`+contactID, {});\n  },\n\n  //==========================================================\n  //USER CRUD\n  //==========================================================\n\n  createUser: (user, cb)=>{\n    console.log(\"create user api.js\")\n    axios.post(`/api/v1/users`, user).then( result =>{\n      result \n      ? cb(result)\n      : console.log(result)\n    })\n  },\n\n  getUser: (userID) => {\n    axios.get(`/api/v1/users`, {});\n  },\n  //PATHS NOT BEING IMPLEMENTED IN CURRENT BUILD\n  /*\n  updateUser: (userID, contact)=>{\n    axios.put(`/api/v1/users`, contact)\n  },\n\n  deleteUser: (userID) => {\n    axios.post(`/api/v1/users/`, {});\n  },\n  */\n  //==========================================================\n  //SERVICES\n  //==========================================================\n\n  //sentTO must be \"+16032755557\" to use twilio.\n    //any other number isnt supported due to twilio free account.\n  sendText: (sendTo, message) => {\n    axios.post('/api/v1/sms', {sendTo: \"+16032755557\", txtBody: message });\n  },\n\n  login: function(email, password, cb) {\n    console.log(\"REACT TO API: Trying to Log in\");\n    console.log(\"password\", password);\n    console.log(\"email\", email);\n    axios.post('/api/v1/login', {email: email, password: password})\n      .then( (result) => {\n        // console.log(\"result from axios.post on api.js\",result);\n        \n        cb(result);\n      })\n      .catch( (err) => {\n        // console.log(err);\n        return err;\n      });\n  },\n\n  logout: ()=>{\n    axios.get('/api/v1/logout')\n    .then( (result) => {\n      console.log( result)\n    }\n    )\n    .catch( (err) =>\n      console.log(err)\n    )\n  }\n};\n","import React, { Component } from \"react\";\nimport { Input } from \"../components/Input\";\nimport { Button } from \"../components/Button\";\nimport \"../components/Nav/\";\nimport \"../components/Nav/style.css\";\nimport Container from \"../components/Container\";\nimport axios from 'axios';\nimport API from \"../utils/API\";\n\nclass Home extends Component {\n    state = {\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n        toggleLoginSignup: false\n    };\n\n    // TO DO !!!!========================\n    componentDidMount() {\n      // Check to see if user is authenticated. If authenticated, log in, if not should be good.\n      \n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleSignUpForm = event => {\n        this.setState({ toggleLoginSignup: !this.state.toggleLoginSignup });\n    }\n\n    handleNewUserSubmit = event => {\n        event.preventDefault();\n        let userInfo = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            password: this.state.password\n        };\n        if ((this.state.firstName.length < 3) || (this.state.firstName.length) > 20) {\n            alert(\"Name must be longer than 2 characters and less than 20 characters.\")\n            return;\n        } else if ((this.state.lastName.length < 3) || (this.state.lastName.length) > 20) {\n            alert(\"Name must be longer than 2 characters and less than 20 characters.\")\n            return;\n        } else if ((this.state.email.length < 3) || (this.state.email.length) > 30) {\n            alert(\"Email must be longer than 2 characters and less than 30 characters.\")\n            return;\n        } else if ((this.state.password.length < 5) || (this.state.password.length) > 20) {\n            alert(\"Passwords must be longer than 5 characters and less than 20 characters.\")\n            return;\n        } else if (this.state.password === this.state.password2) {\n            console.log(userInfo);\n            axios.post(`/api/v1/users`, userInfo, function (results) {\n                console.log(results)\n            }).then(res => {\n                this.handleFormLogin(res);\n            })\n        } else {\n            alert(\"Passwords must match!\")\n            return;\n        }\n\n    }\n\n    APILogin (){\n        API.login(this.state.email, this.state.password, (result) =>\n            result.status === 200\n            ? this.props.flipToDash()\n            : alert(\"that username/password combination doesn'tt work\")\n        )\n    }\n\n    handleFormLogin = event => {\n        if(this.state.toggleLoginSignup === false){\n            event.preventDefault();\n            this.APILogin();\n        } else {\n            this.APILogin();\n        }\n    }\n\n    render(props) {\n        return (\n            <div>\n               <Container>\n                    \n                        <Button\n                            onClick={this.handleSignUpForm}\n                            secondaryColor={this.props.secondaryColor}\n                            fontColor={this.props.fontColor}\n                        >\n                        {this.state.toggleLoginSignup ? \"Login\" : \"Sign Up\"}\n                        </Button>   \n\n                            {this.state.toggleLoginSignup ?\n                                <form className=\"formClass\" id=\"createAccountForm\">\n                                    <Input\n                                        value={this.state.firstName}\n                                        onChange={this.handleInputChange}\n                                        name=\"firstName\"\n                                        placeholder=\"First Name (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Input\n                                        value={this.state.lastName}\n                                        onChange={this.handleInputChange}\n                                        name=\"lastName\"\n                                        placeholder=\"Last Name (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Input\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        name=\"email\"\n                                        placeholder=\"Email (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Input\n                                        type=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        name=\"password\"\n                                        placeholder=\"Password (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Input\n                                        type=\"password\"\n                                        value={this.state.password2}\n                                        onChange={this.handleInputChange}\n                                        name=\"password2\"\n                                        placeholder=\"Re-enter Password\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Button id=\"createAccountButton\"\n                                        disabled={!(this.state.firstName && this.state.email)}\n                                        onClick={this.handleNewUserSubmit}\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    >   \n                                        Submit\n                                    </Button>\n                                </form>\n                                :  \n                                <form className=\"formClass\" id=\"loginForm\">\n                                    {/* Login */}\n                                    <Input\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        name=\"email\"\n                                        placeholder=\"Email (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Input\n                                        type=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        name=\"password\"\n                                        placeholder=\"Password (required)\"\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                    />\n                                    <Button id=\"loginButton\"\n                                        disabled={!(this.state.email && this.state.password)}\n                                        onClick={this.handleFormLogin}\n                                        secondaryColor={this.props.secondaryColor}\n                                        fontColor={this.props.fontColor}\n                                        floatLeft=\"left\"\n                                    >\n                                        Login\n                                    </Button>\n                                </form>\n                             }\n                </Container>\n            </div>\n        )\n    }\n};\n\nexport default Home;","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nexport function NavLinks() {\n\n    return(\n        <nav>\n            <Link className=\"linkHome\" to=\"/\">i.Do  |</Link>\n            <Link className=\"linkLogOut\" to=\"/Logout\">|  Log Out</Link>\n        </nav>\n    )\n    \n};\n","import React from \"react\";\n\n\n\nexport var Test = [{ id: \"1\", firstName: \"Lola\", lastName:\"Starfinder\", email: \"ScienceOfficer@mysticHealer.com\", phone: \"444-444-4444\", address: \"Room 7, Galactic Space Station\"},\n{ id: \"2\", firstName: \"Lola\", lastName:\"Starfinder\", email: \"ScienceOfficer@mysticHealer.com\", phone: \"444-444-4444\", address: \"Room 7, Galactic Space Station\"}];\n\n\n\nexport function PrintText(props) {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\n\n//I think this will let us print something specific from database","import React from \"react\";\nimport { Panel } from 'react-bootstrap';\nimport { PanelGroup } from 'react-bootstrap';\nimport { PrintText } from \"../PrintText\";\n// import Checkbox from '../Checkbox';\n\nfunction ContactCard(props) {\n    return (\n        <PanelGroup \n            accordion id=\"accordion-example\" \n            style={{background: \"transparent\"}}\n            >\n            <Panel eventKey=\"1\" style={{border: 0, background: \"transparent\"}}>\n                <Panel.Heading style={{background: props.secondaryColor}}>\n                    <Panel.Title toggle style={{color: props.fontColor}}>\n                        <PrintText >\n                            {props.firstName} {props.lastName}\n                        </PrintText>\n                    </Panel.Title >\n                </Panel.Heading>\n\n                <Panel.Body collapsible>\n                    <PrintText className=\"infoArea\" >\n                        <PrintText style={{background: props.secondaryColor}}>\n                            {props.phone}\n                            <br/>\n                            {props.email}\n                        </PrintText>\n                        <PrintText style={{background: props.secondaryColor}}>\n                            {props.street}\n                            <br/>\n                            {props.city} {props.state}{props.zipcode}\n                        </PrintText>\n                    </PrintText>\n                </Panel.Body>\n            </Panel>\n            {/* <Checkbox\n                name={props.id}\n                isSelected={props.guestCheckboxes[props.id]}\n                onCheckboxChange={props.handleCheckboxChange}\n                // key=\"checkbox\"\n            /> */}\n        </PanelGroup>\n    );\n};\n\nexport default ContactCard;","import React from \"react\";\n// import API from \"../utils/API\";\nimport { Input } from \"../Input\";\nimport { Button } from \"../Button\";\n\n\nfunction GuestForm (props) {\n    return(\n        <form className=\"formClass\" id=\"guestInfoForm\">\n            <Input\n                value={props.firstName}\n                onChange={props.handleInputChange}\n                name=\"firstName\"\n                placeholder=\"First Name (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.lastName}\n                onChange={props.handleInputChange}\n                name=\"lastName\"\n                placeholder=\"Last Name (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.email}\n                onChange={props.handleInputChange}\n                name=\"email\"\n                placeholder=\"Email (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.phone}\n                onChange={props.handleInputChange}\n                name=\"phone\"\n                placeholder=\"Phone Number (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.street}\n                onChange={props.handleInputChange}\n                name=\"street\"\n                placeholder=\"Street Address (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.city}\n                onChange={props.handleInputChange}\n                name=\"city\"\n                placeholder=\"City (required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.state}\n                onChange={props.handleInputChange}\n                name=\"state\"\n                placeholder=\"State(required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Input\n                value={props.zipcode}\n                onChange={props.handleInputChange}\n                name=\"zipcode\"\n                placeholder=\"Zipcode(required)\"\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            />\n            <Button id=\"guestInfoFormButton\"\n                disabled={(props.state.firstName && props.state.email)}\n                onClick={props.handleFormSubmit}\n                secondaryColor={props.secondaryColor}\n                fontColor={props.fontColor}\n            >\n                Submit\n            </Button>\n        </form>\n    )\n}\n\nexport default GuestForm;","import React from \"react\";\nimport { Button, Modal} from 'react-bootstrap';\n\n\n\n\nclass GuestLink extends React.Component {\n    constructor(props, context) {\n      super(props, context);\n  \n      this.handleShow = this.handleShow.bind(this);\n      this.handleClose = this.handleClose.bind(this);\n  \n      this.state = {\n        show: false\n      };\n    }\n\n    componentDidMount(){\n      console.log(\"props ID\",this.props.eventID)\n      this.setState({eventID: this.props.eventID})\n    }\n  \n    handleClose() {\n      this.setState({ show: false });\n    }\n  \n    handleShow() {\n      this.setState({ show: true });\n    }\n  \n    render(props) {\n\n      return (\n        <div>\n          <p id=\"modal-message\">Please copy this link and send to your guests.</p>\n  \n          <Button bsStyle=\"primary\" \n                  bsSize=\"medium\" onClick={this.handleShow} \n                  style={   { \"background\": this.props.secondaryColor,\n                              \"color\": this.props.fontColor,\n                              \"margin-left\": \"25%\",\n                              \"width\": \"50%\",\n                              \"border\": 0}}>\n            Guest Link\n          </Button>\n  \n          <Modal show={this.state.show} onHide={this.handleClose}>\n            <Modal.Header closeButton>\n              <Modal.Title>Guest Link</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <h4>Copy the link below</h4>\n              <p>\n                https://i-dooo.herokuapp.com/event/{this.props.eventID}\n              </p>\n              \n            </Modal.Body>\n            <Modal.Footer>\n              <Button onClick={this.handleClose}>Close</Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      );\n    }\n  }\n  \n//   render (<GuestLink />);\nexport default GuestLink;","import React, {Component} from \"react\";\nimport API from '../utils/API'\nimport {NavLinks} from \"../components/NavLinks\";\nimport Container from \"../components/Container\";\nimport ContactCard from \"../components/ContactCard\";\nimport { Panel, PanelGroup } from 'react-bootstrap';\nimport {PrintText} from '../components/PrintText';\nimport {Button} from \"../components/Button\";\nimport GuestForm from '../components/GuestForm';\nimport { Input } from \"../components/Input\";\nimport Modal from \"../components/Modal\";\n\nclass Dashboard extends Component {\n    state = {\n        userID: \"\",\n        contacts: [],\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\",\n        task: \"\",\n        list: {},\n        guestCheckboxes: {}\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n    \n    handleGuestEdit = event => {\n        event.preventDefault();\n        alert(\"Hey! Edit Button works! That's something to be proud of\");\n    }\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        let guestFormValues = {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            phone: this.state.phone,\n            street: this.state.street,\n            city: this.state.city,\n            state: this.state.state,\n            zipcode: this.state.zipcode,\n        }\n        API.createUserContact(guestFormValues, result =>\n            result\n            ? this.componentDidMount()\n            : console.log(\"Sorry that didn't go through\")\n            )\n    }\n\n    handleContactEdit = event => {\n        event.preventDefault();\n        alert(\"Hey! This is where editing code goes!\")\n    }\n\n    newItemId = () => {\n        const id = this.lastItemId;\n        this.lastItemId += 1;\n        return id;\n      };\n\n    handleToDoAdd = event => {\n        event.preventDefault();\n        alert(\"Added \" + this.state.task);\n        const id = this.newItemId();\n        const taskObj = {\n            id,\n            task: this.state.task\n        };\n        const newListObj = this.state.list;\n        newListObj[id] = taskObj;\n\n        this.setState({\n            list: newListObj\n        }, () => console.log(this.state.list));\n    };\n\n    handleDelete = id => {\n        const removeItems = this.state.list;\n        delete removeItems[id];\n        this.setState({\n            list: removeItems\n        })\n    };\n\n    renderToDos = () => {\n        const bigArray = [];\n\n        for (let taskNum in this.state.list){\n            bigArray.push(\n                <div>\n                    <PrintText>{this.state.list[taskNum].task}</PrintText>\n                    <Button\n                        onClick={() => this.handleDelete(taskNum)}\n                    >\n                    X\n                    </Button>\n                </div>\n            );\n        }\n\n        return bigArray;\n    }\n\n    handleFormEdit = event => {\n        event.preventDefault();\n        //This is where we edit things\n    }\n\n    handleSendMassMessage = event => {\n        event.preventDefault();\n        //This is where we call the component for sending messages out to guests\n    }\n\n    // --------- CHECKBOX STUFF ----------\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n\n        this.setState(prevState => ({\n            guestCheckboxes: {\n                ...prevState.guestCheckboxes,\n                [name]: !prevState.guestCheckboxes[name]\n            }\n        }));\n    };\n\n    // ----------------- NOT USING YET ------------\n    selectAllCheckboxes = isSelected => {\n        Object.keys(this.state.checkboxes).forEach(checkbox => {\n            this.setState(prevState => ({\n                checkboxes: {\n                    ...prevState.checkboxes,\n                    [checkbox]: isSelected\n                }\n            }));\n        });\n    };\n\n    selectAll = () => this.selectAllCheckboxes(true);\n\n    deselectAll = () => this.selectAllCheckboxes(false);\n    // -------------------------------------------\n\n    clearFormThanks() {\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phone: \"\",\n            street: \"\",\n            city: \"\",\n            state: \"\",\n            zipcode: \"\",\n        })\n    }\n\n\n    \n    componentDidMount() {\n        this.clearFormThanks()\n        API.getContacts( results => {\n            results.data\n            ? this.setState({ \n                contacts: results.data.contacts, \n                userID: results.data.userID\n            })\n            : this.setState({ contacts: [{ firstName: \"No Contacts\" }]})\n        });\n\n        const guestCheckboxes = this.state.contacts.reduce(\n            (checkboxObj, contact) => ({\n                ...checkboxObj,\n                [contact.id]: false\n            }),\n            {}\n        )\n        this.setState({ \n            contacts: this.state.contacts,\n            guestCheckboxes\n\n        });\n    }\n\n    render(props) {\n        return (\n      \n            <div>\n                <NavLinks/>\n                <Container>\n               <h1 className=\"dashboard\" id=\"dashboard-title\">Dashboard</h1>\n                    {console.log(this.props.secondaryColor)}\n                    {/* The guest link appears within this modal */}\n                    <Modal  eventID={this.state.userID}\n                            secondaryColor={this.props.secondaryColor}\n                            fontColor={this.props.fontColor}/>\n                    <br/>\n                    {/* <Button\n                        onClick={this.handleSendMassMessage}\n                    >\n                        Send Email\n                    </Button> */}\n                    {/* <br/> */}\n                    {/* <br/> */}\n                    <PanelGroup className=\"manuallyAddUser\" accordion id=\"accordion-example\">\n                        <Panel eventKey=\"1\" style ={{\"border\":0}}>\n                            <Panel.Heading style={{ \"background\": this.props.secondaryColor,\n                                                        \"color\": this.props.fontColor,\n                                                        }}>\n                                <Panel.Title style={{ \"background\": \"transparent\",\n                                                    \"border\":0,\n                                                     }}\n                                                        toggle>\n                                    Add New Guest\n                                </Panel.Title>\n                            </Panel.Heading>\n                            <Panel.Body collapsible style={{\"border-top\":0}}>\n                            <GuestForm \n                                handleInputChange={this.handleInputChange}\n                                handleFormSubmit={this.handleFormSubmit}\n                                firstName={this.state.firstName}\n                                lastName={this.state.lastName}\n                                email={this.state.email}\n                                phone={this.state.phone}\n                                street={this.state.street}\n                                city={this.state.city}\n                                state={this.state.state}\n                                zipcode={this.state.zipcode}\n                                secondaryColor={this.props.secondaryColor}\n                                fontColor={this.props.fontColor}\n                            />\n                            \n                            </Panel.Body>\n                        </Panel>\n                    </PanelGroup>\n                    <br/>\n                    <PanelGroup style={{background: \"transparent\"}}>\n                    {this.state.contacts.map(contact=>\n                        <ContactCard {...contact} secondaryColor={this.props.secondaryColor}\n                        fontColor={this.props.fontColor}/>\n                    )}\n                    </PanelGroup>\n                               \n                    {/* <PanelGroup>\n                        <Panel>\n                            <Panel.Heading>\n                                To Do\n                            </Panel.Heading>\n                            <Panel.Body>\n                                <Input\n                                    value={this.state.task}\n                                    onChange={this.handleInputChange}\n                                    name=\"task\"\n                                    placeholder=\"Add an Item\"\n                                    >\n                                </Input>\n                                <Button\n                                    onClick={this.handleToDoAdd}\n                                >\n                                    Add\n                                </Button>\n                            </Panel.Body>\n                        </Panel>\n                        <Panel>\n                            {this.renderToDos()}\n                        </Panel>\n                    </PanelGroup> */}\n                </Container>\n            </div>\n        );\n    };\n};\n\nexport default Dashboard;","import React from \"react\";\n\nfunction ErrorPage() {\n    return (\n        <div>\n            <a href=\"/\">\n                i.Do  |\n            </a>\n            <h1>Page Not Found</h1>\n            <h2>Sorry About That!</h2>\n        </div>\n    )\n}\n\nexport default ErrorPage;\n\n","import React, { Component } from \"react\";\nimport GuestForm from '../components/GuestForm';\nimport Container from \"../components/Container\";\nimport API from \"../utils/API\";\n\nclass Guests extends Component {\n    state = {\n        userID: \"\",\n        \n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        phone: \"\",\n        street: \"\",\n        city: \"\",\n        state: \"\",\n        zipcode: \"\"\n    };\n\n    componentDidMount(){\n        const userID = this.props.match.params.userID\n        console.log(userID);\n        // TODO Assign userID to state\n        this.setState({userID: userID})\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        API.createGuestContact(this.state.userID, this.state, (result =>\n            this.clearFormThanks()\n            ))\n        // TODO on submit of the form, send data to userID database\n    }\n\n    clearFormThanks() {\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            phone: \"\",\n            street: \"\",\n            city: \"\",\n            state: \"\",\n            zipcode: \"\",\n        })\n        alert(\"Thank you!\")\n    }\n\n    render() {\n        return (\n            <div>\n               <Container>\n                <h3>Let's Get Started!</h3>\n                <GuestForm \n                    handleInputChange={this.handleInputChange}\n                    handleFormSubmit={this.handleFormSubmit}\n                    firstName={this.state.firstName}\n                    lastName={this.state.lastName}\n                    email={this.state.email}\n                    phone={this.state.phone}\n                    street={this.state.street}\n                    city={this.state.city}\n                    state={this.state.state}\n                    zipcode={this.state.zipcode}\n                />\n            </Container>\n            </div>\n\n        )\n    }\n};\n\nexport default Guests;","import React from 'react';\nimport { CirclePicker } from 'react-color';\n\n  \n\nclass ColorPicker extends React.Component {\n    \n    state = {\n      primaryColor: '#000000',\n      width: \"100px\"\n    };\n  \n    handleChangeComplete = (color) => {\n        this.setState({ primaryColor: color.hex });\n        this.props.changePrimaryColor(this.state.primaryColor)\n        document.body.style.backgroundColor = this.state.primaryColor\n        \n    };\n    \n    render() {\n\n       const colors = [\n            \"#f06292\", \"#f8bbd0\", \n            \"#ba68c8\", \"#e1bee7\", \n            \"#9575cd\", \"#d1c4e9\", \n            \"#7986cb\", \"#c5cae9\", \n            \"#64b5f6\", \"#bbdefb\", \n            \"#4dd0e1\", \"#b3e5fc\", \n            \"#4db6ac\", \"#b2ebf2\", \n            \"#fff176\", \"#c8e6c9\", \n            \"#ffb74d\", \"#ffecb3\", \n            \"#ff8a65\", \"#ffe0b2\", \n            \"#90a4ae\", \"#d9d9d9\",\n            \"#000000\", \"#ffffff\" ]\n\n\n    return (\n        <div>\n            <CirclePicker\n                color={ this.state.primaryColor }\n                onChangeComplete={ this.handleChangeComplete }\n                width = {this.state.width}\n                colors = {colors}\n                \n            />\n\n        </div>\n      )}\n\n  }\n  export default ColorPicker","import React from 'react';\nimport { CirclePicker } from 'react-color';\n\nclass ColorPicker2 extends React.Component {\n    state = {\n      secondaryColor: '#fff',\n      width: \"100px\"\n    };\n  \n    handleChangeComplete = (color) => {\n      this.setState({ secondaryColor: color.hex });\n      this.props.changeSecondaryColor(this.state.secondaryColor)\n\n    };\n\n    render() {\n\n      const colors = [\n        \"#f06292\", \"#f8bbd0\", \n        \"#ba68c8\", \"#e1bee7\", \n        \"#9575cd\", \"#d1c4e9\", \n        \"#7986cb\", \"#c5cae9\", \n        \"#64b5f6\", \"#bbdefb\", \n        \"#4dd0e1\", \"#b3e5fc\", \n        \"#4db6ac\", \"#b2ebf2\", \n        \"#fff176\", \"#c8e6c9\", \n        \"#ffb74d\", \"#ffecb3\", \n        \"#ff8a65\", \"#ffe0b2\", \n        \"#90a4ae\", \"#d9d9d9\",\n        \"#000000\", \"#ffffff\" ]\n\n      return (\n        <div>\n            <CirclePicker\n                color={ this.state.secondaryColor }\n                onChangeComplete={ this.handleChangeComplete }\n                width = {this.state.width}\n                colors = {colors}\n                \n            />\n\n        </div>\n      )}\n\n  }\n  export default ColorPicker2","import React from 'react';\nimport { CirclePicker } from 'react-color';\n\nclass ColorPickerFont extends React.Component {\n    state = {\n      background: '#fff',\n      width: \"100px\",\n    };\n  \n    handleChangeComplete = (color) => {\n      this.setState({ background: color.hex });\n      \n      this.props.changeFontColor(this.state.background)\n    };\n\n    render() {\n\n      const colors = [\n        \"#f06292\", \"#f8bbd0\", \n        \"#ba68c8\", \"#e1bee7\", \n        \"#9575cd\", \"#d1c4e9\", \n        \"#7986cb\", \"#c5cae9\", \n        \"#64b5f6\", \"#bbdefb\", \n        \"#4dd0e1\", \"#b3e5fc\", \n        \"#4db6ac\", \"#b2ebf2\", \n        \"#fff176\", \"#c8e6c9\", \n        \"#ffb74d\", \"#ffecb3\", \n        \"#ff8a65\", \"#ffe0b2\", \n        \"#90a4ae\", \"#d9d9d9\",\n        \"#000000\", \"#ffffff\" ]\n\n      return (\n        <div>\n            <CirclePicker\n                color={ this.state.background }\n                onChangeComplete={ this.handleChangeComplete }\n                width = {this.state.width}\n                colors = {colors}\n                \n            />\n\n        </div>\n      )}\n\n  }\n  export default ColorPickerFont","import React from \"react\";\nimport $ from \"jquery\"\nimport '../ColorMenu/style.css';\nimport ColorPicker from \"../ColorMenu/ColorPicker\"\nimport ColorPicker2 from \"../ColorMenu/ColorPicker2\"\nimport ColorPickerFont from \"../ColorMenu/ColorPickerFont\"\n    \n\nfunction toggleColors() {\n\n    $(\".circle-picker-container\").toggleClass(\"circleChange\")\n    $(\".bar1\").toggleClass(\"bar1change\")\n    $(\".bar2\").toggleClass(\"bar2change\")\n    $(\".bar3\").toggleClass(\"bar3change\")\n}\n\nfunction clickColor1() {\n    $(\".circle-picker-primary\").toggleClass(    \"invisible\", false)\n    $(\".circle-picker-secondary\").toggleClass(  \"invisible\", true)\n    $(\".circle-picker-font\").toggleClass(       \"invisible\", true)\n}\nfunction clickColor2() {\n    $(\".circle-picker-primary\").toggleClass(    \"invisible\", true)\n    $(\".circle-picker-secondary\").toggleClass(  \"invisible\", false)\n    $(\".circle-picker-font\").toggleClass(       \"invisible\", true)\n}\nfunction clickFont() {\n    $(\".circle-picker-primary\").toggleClass(    \"invisible\", true)\n    $(\".circle-picker-secondary\").toggleClass(  \"invisible\", true)\n    $(\".circle-picker-font\").toggleClass(       \"invisible\", false)\n}\n\nexport default function Button(props) {\n    var button1Stlye = {\n        background: props.primaryColor\n    };\n    var button2Stlye = {\n        background: props.secondaryColor\n    };\n    var button3Stlye = {\n        background: props.fontColor\n    };\n    if(props.button1Stlye){\n        button1Stlye.background = props.primaryColor;\n    }\n    if(props.button2Stlye){\n        button2Stlye.background = props.secondaryColor;\n    }\n    if(props.button3Stlye){\n        button3Stlye.background = props.fontColor;\n    }\n    return (\n        <div>\n            <div className=\"MenuContainer\" onClick={toggleColors}>\n                <div className=\"bar1\"></div>\n                <div className=\"bar2\"></div>\n                <div className=\"bar3\"></div>\n            </div>\n            <div className=\"circle-picker-container\">\n                <div className=\"buttonBox\" >\n                    <button style={button1Stlye}    onClick={clickColor1} className=\"buttonPrimary\">Primary</button>\n                    <button style={button2Stlye}    onClick={clickColor2} className=\"buttonSecondary\">Secondary</button>\n                    <button style={button3Stlye}    onClick={clickFont} className=\"buttonFont\">Font</button>\n                </div>\n                <div className=\"circle-picker-primary\">\n                    <ColorPicker        primaryColor = {props.primaryColor} \n                                        changePrimaryColor={props.changePrimaryColor} />\n                </div>\n                <div className=\"circle-picker-secondary\">\n                    <ColorPicker2       secondaryColor = {props.secondaryColor} \n                                        changeSecondaryColor={props.changeSecondaryColor}/>\n                </div>\n                <div className=\"circle-picker-font\">\n                    <ColorPickerFont    fontColor = {props.fontColor} \n                                        changeFontColor={props.changeFontColor}/>\n                </div>\n            </div>\n        </div>\n    );\n  };\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\"\nimport ErrorPage from \"./pages/ErrorPage\";\nimport Guest from \"./pages/Guest\";\nimport Nav from \"./components/Nav\";\nimport ColorMenu from \"./components/ColorMenu\"\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isLoggedIn: false,\n      primaryColor: \"white\",\n      secondaryColor: \"rgb(247, 238, 228)\",\n      fontColor: \"black\"\n    }\n  }\n  changePrimaryColor = newColor => {\n    this.setState({primaryColor: newColor});\n  }\n  changeSecondaryColor = newColor2 => {\n    this.setState({secondaryColor: newColor2});\n  }\n  changeFontColor = newFont => {\n    this.setState({fontColor: newFont});\n  }\n  componentDidMount(){\n    window.changePrimaryColor = this.changePrimaryColor;\n  }\n  renderDefaultView = (props) => {\n    if(this.state.loggedIn){\n      return <Dashboard {...props}  secondaryColor={this.state.secondaryColor}\n                                    fontColor={this.state.fontColor}/>\n    } else {\n      return <Home {...props}       secondaryColor={this.state.secondaryColor} \n                                    fontColor={this.state.fontColor}\n                                    flipToDash={this.toggleLoggedIn} />\n    }\n  }\n  \n  toggleLoggedIn = () => {\n    this.setState({loggedIn: true})\n  }\n\n  logOut = () => {\n    this.setState({loggedIn: false})\n    // TODO API Signout call.\n    return <Redirect\n        to={{\n          pathname: \"/\"\n        }}\n      />\n  }\n\n  render(){\n    return (\n      <Router>\n        <div>\n        <ColorMenu    changePrimaryColor={this.changePrimaryColor} \n                      changeSecondaryColor={this.changeSecondaryColor} \n                      changeFontColor={this.changeFontColor} \n                      primaryColor={this.state.primaryColor}\n                      secondaryColor={this.state.secondaryColor}\n                      fontColor={this.state.fontColor}/>\n\n          <Nav        secondaryColor={this.state.secondaryColor}\n                      fontColor={this.state.fontColor}/>\n          <Switch>\n            <Route exact path=\"/\" render={this.renderDefaultView}/>\n            <Route exact path=\"/event/:userID\" component={Guest} />\n            <Route exact path=\"/Logout\" render={this.logOut} />\n            <Route component={ErrorPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}